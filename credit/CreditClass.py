import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from DbConfig.database_service import DatabaseService

class BankingCore:
    def __init__(self):
        self.db = DatabaseService()
        self.current_user = None
        self.current_credit = None
    
    def select_user(self):
        """–í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        users = self.db.get_all_users()
        if not users:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ")
            return
        
        print("\nüë• –í–´–ë–ï–†–ò–¢–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:")
        for i, (user_id, name, surname) in enumerate(users, 1):
            print(f"{i}. {name} {surname} (ID: {user_id})")
        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        
        try:
            choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä: "))
            if choice == 0:
                return
            if 1 <= choice <= len(users):
                self.current_user = users[choice - 1]
                self.current_credit = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
                print(f"‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {self.current_user[1]} {self.current_user[2]}")
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
    
    def select_credit(self):
        """–í—ã–±–æ—Ä –∫—Ä–µ–¥–∏—Ç–∞"""
        if not self.current_user:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
        
        credits = self.db.get_user_credits(self.current_user[0])
        if not credits:
            print(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.current_user[1]} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤")
            return
        
        print(f"\nüí≥ –ö–†–ï–î–ò–¢–´ {self.current_user[1]} {self.current_user[2]}:")
        for i, (credit_id, amount, remaining, status) in enumerate(credits, 1):
            print(f"{i}. –ö—Ä–µ–¥–∏—Ç #{credit_id}: {amount:.2f} ‚ÇΩ (–æ—Å—Ç–∞—Ç–æ–∫: {remaining:.2f} ‚ÇΩ)")
        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        
        try:
            choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∫—Ä–µ–¥–∏—Ç–∞: "))
            if choice == 0:
                return
            if 1 <= choice <= len(credits):
                self.current_credit = credits[choice - 1]
                print(f"‚úÖ –í—ã–±—Ä–∞–Ω –∫—Ä–µ–¥–∏—Ç #{self.current_credit[0]}")
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
    
    def make_payment_menu(self):
        """–ú–µ–Ω—é –≤–Ω–µ—Å–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"""
        if not self.current_credit:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–¥–∏—Ç")
            return
        
        credit_id, amount, remaining, status = self.current_credit
        
        print(f"\nüí∞ –í–ù–ï–°–ï–ù–ò–ï –ü–õ–ê–¢–ï–ñ–ê:")
        print(f"–ö—Ä–µ–¥–∏—Ç #{credit_id}")
        print(f"–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: {amount:.2f} ‚ÇΩ")
        print(f"–û—Å—Ç–∞—Ç–æ–∫ –¥–æ–ª–≥–∞: {remaining:.2f} ‚ÇΩ")
        
        try:
            payment_amount = float(input("\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞: "))
            success, message = self.db.make_payment(credit_id, payment_amount)
            print(message)
            
            if success:
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–µ–¥–∏—Ç–µ
                credits = self.db.get_user_credits(self.current_user[0])
                for credit in credits:
                    if credit[0] == credit_id:
                        self.current_credit = credit
                        break
                
                # –ï—Å–ª–∏ –∫—Ä–µ–¥–∏—Ç –ø–æ–≥–∞—à–µ–Ω, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
                if self.current_credit[2] <= 0:
                    print("üéâ –ö—Ä–µ–¥–∏—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–≥–∞—à–µ–Ω!")
                    self.current_credit = None
                    
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É")